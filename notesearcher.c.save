#include <fcntl.h>
#include <stdio.h>
#include <sys/stat.h>
#include <unistd.h>

#include "hacking.h"


#define FILENAME "/var/notes"


int print_notes(int fd, char* search_string, int user_id);
int find_note(int fd, int user_id);
int search_note(char* note, char* keyword);


int main(int argc, char* argv[])
{
    int fd, printing = 1, user_id;
    char search_string[100];
    
    user_id = getuid();

    if (argc < 3)
        search_string[0] = 0;
    else
        strcpy(search_string, argv[2]);
    
    fd = open(FILENAME, O_RDONLY, S_IRUSR);
    if (fd == -1)
        fatal("In main() during the file opening");

    while (printing){
        printing = print_notes(fd, search_string, user_id);
    }

    printf("-----------[end of data]----------");
    close(fd);
    return 0;
}

int print_notes(int fd, char* search_string, int user_id)
{
    int note_length, search_result;
    char* note;

    note_length = find_note(fd, user_id);
    if (note_length == -1)
        return 0;
    note = (char*) ec_malloc(100);
    read(fd, note, note_length);
    *(note + note_length) = 0;

    search_result = search_note(note, search_string);
    printf("0x%x\n", search_result);
    if (search_result)
        printf(note);

    return 1;
}

int find_note(int fd, int user_id)
{
    int note_uid = -1;
    unsigned char byte = 0;
    int length;

    while (note_uid != user_id)
    {
        if (read(fd, &note_uid, 4) != 4)
            return -1;
        if (read(fd, &byte, 1) != 1)
            return -1;

        byte = length = 1;
        while (byte != '\n'){
            if (read(fd, &byte, 1) != 1)
                return -1;
            length++;
        }
    }
    
    lseek(fd, length  * -1, SEEK_CUR);
    printf("[DEBUG] Note with length %d was found\n", length);
    
    return length;
}

int search_note(char* note, char* keyword)
{
    int i, keyword_length = strlen(keyword), match = 0;
	    printf("0x%x\n", keyword_length);
    if (keyword_length == 1)
        return 1;
    
    for (i = 0; i < strlen(note); i++)
    {
        if (keyword[match] == note[i])
            match++;
            if (match == keyword_length)
                return 1;
        else
            if (keyword[0] == note[i])
                match = 1;
    }

    return 0;
}
